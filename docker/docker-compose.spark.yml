version: "3.8"

services:

  # Spark Master with 3 workers.
  spark-master:
    image: 'bde2020/spark-master:3.2.0-hadoop3.2'
    container_name: spark-master
    hostname: spark-master
    environment:
      - INIT_DAEMON_STEP=setup_spark
    volumes:
      - ../spark/app:/usr/local/spark/app
      - ../spark/resources:/usr/local/spark/resources
    ports:
       - "8181:8080"
       - "7077:7077"
    networks:
      - oasiscorp

  # Spark Worker-1
  spark-worker-1:
    image: 'bde2020/spark-worker:3.2.0-hadoop3.2'
    container_name: spark-worker-1
    depends_on: 
      - spark-master
    ports:
      - "8081:8081"
    env_file:
      - .env
    volumes:
      - ../spark/app:/usr/local/spark/app 
      - ../spark/resources:/usr/local/spark/resources
    networks:
      - oasiscorp 

  # Spark Worker-2
  spark-worker-2:
    image: 'bde2020/spark-worker:3.2.0-hadoop3.2'
    container_name: spark-worker-2
    ports:
      - "8083:8081"
    depends_on: 
      - spark-master
    env_file:
      - .env
    volumes:
      - ../spark/app:/usr/local/spark/app
      - ../spark/resources:/usr/local/spark/resources
    networks:
      - oasiscorp
  
  # Spark Worker-3
  spark-worker-3:
    image: bde2020/spark-worker:3.2.0-hadoop3.2
    container_name: spark-worker-3
    ports:
      - "8084:8081"
    depends_on: 
      - spark-master
    env_file:
      - .env
    volumes:
      - ../spark/app:/usr/local/spark/app
      - ../spark/resources:/usr/local/spark/resources
    networks:
      - oasiscorp

  # Minio: S3 Object Storage
  minio:
    hostname: minio
    container_name: minio
    image: 'minio/minio'
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${PWD}/minio/data:/export
      - ${PWD}/minio/config:/root/.minio
    networks:
      - oasiscorp    
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: ["server", "--console-address", ":9001", "/export"]

  # Minio Client:Â Create Minio Buckets
  createbuckets:
    image: 'minio/mc'
    container_name: minio-client
    depends_on:
      - minio
    env_file:
      - .env
    networks:
      - oasiscorp
    volumes:
      - ${PWD}/minio/entrypoint.sh:/entrypoint.sh
    entrypoint: /bin/bash /entrypoint.sh


  #   # Trino: Big Data Engine

  # trino:
  #       hostname: trino
  #       container_name: trino
  #       image: 'trinodb/trino:351'
  #       ports:
  #         - '8080:8080'
  #       volumes:
  #         - ${PWD}/trino/server:/usr/lib/trino/etc
  #       networks:
  #         - oasiscorp

# Volumes
volumes:
      nifi-database_repository:

# Network Bridge Connection
networks:
  oasiscorp:
    name: oasiscorp
    driver: bridge