version: "3.8"
# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-07-08T00-05-23Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  # environment:
    # MINIO_ROOT_USER: minioadmin
    # MINIO_ROOT_PASSWORD: minioadmin
  networks:
            - oasiscorp
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:

    minio1:
            <<: *minio-common
            hostname: minio1
            networks:
                - oasiscorp
            volumes:
                - data1-1:/data1
                - data1-2:/data2

    minio2:
            <<: *minio-common
            hostname: minio2
            networks:
                - oasiscorp
            volumes:
                - data2-1:/data1
                - data2-2:/data2

    minio3:
            <<: *minio-common
            hostname: minio3
            networks:
                - oasiscorp
            volumes:
                - data3-1:/data1
                - data3-2:/data2

    minio4:
            <<: *minio-common
            hostname: minio4
            networks:
                    - oasiscorp
            volumes:
                - data4-1:/data1
                - data4-2:/data2

    nginx:
            image: nginx:1.19.2-alpine
            hostname: nginx
            networks:
                    - oasiscorp
            volumes:
                - ./nginx.conf:/etc/nginx/nginx.conf:ro
            ports:
                - "9000:9000"
                - "9001:9001"
            depends_on:
                - minio1
                - minio2
                - minio3
                - minio4

    # Spark with 2 workers
    spark:
        hostname: spark
        container_name: spark_container
        image: 'bitnami/spark:latest'
        user: root # Run container as root container: https://docs.bitnami.com/tutorials/work-with-non-root-containers/
        networks:
            - oasiscorp
        environment:
            - SPARK_MODE=master
            - SPARK_RPC_AUTHENTICATION_ENABLED=no
            - SPARK_RPC_ENCRYPTION_ENABLED=no
            - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
            - SPARK_SSL_ENABLED=no
        volumes:
            - ../spark/app:/usr/local/spark/app # Spark scripts folder (Must be the same path in airflow and Spark Cluster)
            - ../spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)
        ports:
            - "8181:8080"
            - "7077:7077"

    spark-worker-1:
        container_name: sw1_container
        image: 'bitnami/spark:latest'
        user: root
        networks:
            - oasiscorp
        environment:
            - SPARK_MODE=worker
            - SPARK_MASTER_URL=spark://spark:7077
            - SPARK_WORKER_MEMORY=2G
            - SPARK_WORKER_CORES=1
            - SPARK_RPC_AUTHENTICATION_ENABLED=no
            - SPARK_RPC_ENCRYPTION_ENABLED=no
            - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
            - SPARK_SSL_ENABLED=no
        volumes:
            - ../spark/app:/usr/local/spark/app # Spark scripts folder (Must be the same path in airflow and Spark Cluster)
            - ../spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)

    spark-worker-2:
        container_name: sw2_container
        image: 'bitnami/spark:latest'
        user: root
        networks:
            - oasiscorp
        environment:
            - SPARK_MODE=worker
            - SPARK_MASTER_URL=spark://spark:7077
            - SPARK_WORKER_MEMORY=2G
            - SPARK_WORKER_CORES=1
            - SPARK_RPC_AUTHENTICATION_ENABLED=no
            - SPARK_RPC_ENCRYPTION_ENABLED=no
            - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
            - SPARK_SSL_ENABLED=no
        volumes:
            - ../spark/app:/usr/local/spark/app # Spark scripts folder (Must be the same path in airflow and Spark Cluster)
            - ../spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)

    spark-worker-3:
        image: 'bitnami/spark:latest'
        user: root
        networks:
            - oasiscorp
        environment:
            - SPARK_MODE=worker
            - SPARK_MASTER_URL=spark://spark:7077
            - SPARK_WORKER_MEMORY=2G
            - SPARK_WORKER_CORES=1
            - SPARK_RPC_AUTHENTICATION_ENABLED=no
            - SPARK_RPC_ENCRYPTION_ENABLED=no
            - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
            - SPARK_SSL_ENABLED=no
        volumes:
            - ../spark/app:/usr/local/spark/app # Spark scripts folder (Must be the same path in airflow and Spark Cluster)
            - ../spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)


    # spark-worker-4:
    #     image: 'bitnami/spark:latest'
    #     user: root
    #     networks:
    #         - oasiscorp
    #     environment:
    #         - SPARK_MODE=worker
    #         - SPARK_MASTER_URL=spark://spark:7077
    #         - SPARK_WORKER_MEMORY=2G
    #         - SPARK_WORKER_CORES=1
    #         - SPARK_RPC_AUTHENTICATION_ENABLED=no
    #         - SPARK_RPC_ENCRYPTION_ENABLED=no
    #         - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
    #         - SPARK_SSL_ENABLED=no
    #     volumes:
    #         - ../spark/app:/usr/local/spark/app # Spark scripts folder (Must be the same path in airflow and Spark Cluster)
    #         - ../spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)

    # Jupyter notebook
    jupyter-spark:
        hostname: myjupyter
        container_name: jupyter_container
        image: 'jupyter/pyspark-notebook:latest'
        networks:
            - oasiscorp
        ports:
          - "8888:8888"
          - "4040-4080:4040-4080"
        volumes:
          - ../notebooks:/home/jovyan/work/notebooks/
          - ../spark/resources/data:/home/jovyan/work/data/
          - ../spark/resources/jars:/home/jovyan/work/jars/

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

networks:
  oasiscorp:
    driver: bridge